import java.util.ArrayList;

// LEAVE THIS FILE IN THE DEFAULT PACKAGE
//  (i.e., DO NOT add 'package cs311.pa1;' or similar)

// DO NOT MODIFY THE EXISTING METHOD SIGNATURES
//  (you may, however, add member fields and additional methods)

// DO NOT INCLUDE LIBRARIES OUTSIDE OF THE JAVA STANDARD LIBRARY
//  (i.e., you may include java.util.ArrayList etc. here, but not junit, apache commons, google guava, etc.)

/**
* @author Hugh Potter
*/

public class HashTable
{
	class Table {
		ArrayList<Tuple> list;
		int numElements;
		public Table(){
			list = new ArrayList<Tuple>(null);
			numElements = 0;
		}
	}
	
	private int size, numElements;
	private HashFunction hash;
	private Table[] table;

	public HashTable(int size)
	{
		// possibly check and see if size will be negative
		this.size = size;
		this.numElements = 0;
		hash = new HashFunction(size);
		table = new Table[size];
	}

	public int maxLoad()
	{
		return 0;
	}

	public float averageLoad()
	{
		// implementation
		return 0;
	}

	public int size()
	{
		return size;
	}

	public int numElements()
	{
		
		return numElements;
	}

	public float loadFactor()
	{
		return 0;
	}

	public void add(Tuple t)
	{
		int h = hash.hash(t.getKey());
		System.out.println(h);
		numElements++;
	}

	public ArrayList<Tuple> search(int k)
	{
		return null;
	}

	public int search(Tuple t)
	{
		return 0;
	}

	public void remove(Tuple t)
	{
		numElements--;
	}
	public void printTable(){
		for(int i = 0; i < this.table.length; i++){
			for(Tuple j : table[i].list){
				if(j == null){
					System.out.print(" null ");
				} else {
					j.toString();
				}
			}
		}
	}
}